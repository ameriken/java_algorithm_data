■前提
商品{2,3,5,7}
価値{2,4,6,7}

初期値の暫定の値(商品が何も入ってない状態)はゼロとなる

容量が下記のように存在するとして
{0, 1, 2, 3, 4}

何も商品が入ってない状態は
{0, 0, 0, 0, 0} 

となる。

ここで、商品[0]を入れたいと考えます。
商品[0]の容量は2となるので、容量が2以上の時しか入れられません。

暫定の容量上限サイズが2つしか入れられない袋に対して商品[0](サイズ2)をいれるためには
現在入ってる袋のサイズを2つ分減らす必要があります。減らしたら、容量が2つ入るはずの袋
が一時的に空になるので,商品[0]をいれることができます。

この時の価値と,元々保持していた価値を比較して上回ってたら代入します。

容量3いれることができるようになった場合も同様です。
絶対に商品[0]を入れたいです。

なぜなら、容量3入る袋に商品[0]を必ず入れた時の合計値が知りたいからです。
容量3入る袋に対して商品[0]を入れる場合は前回同様に商品をいれるための容量である-2を引きます。

そうすると容量3の入る袋が一時的に容量1の時と同じ状態となり、この状態で商品[0]サイズ2を入れます。
※動的計画法は前回の計算結果を保持し、仮で新しい商品を入れた時の価値がどうなるか知りたい時に使うもの


商品[1]になった時も同様です。
まず、商品の容量が3なので、袋の容量が3以降が変わります。
現在の容量3以降の容量で商品1が入ったケースが考えることができる。

現在の容量3が入る袋の中身を取り除き、今回の商品[1]容量3をいれる、
価値がこっちの方が高ければ代入する

容量が増えても同様で、現在の容量4から商品[1]のサイズを引き算ををする。
その上で暫定の商品1の容量と新しい容量3をいれることで中身が違う(価値が違う)ものが入る。


■結論
DPとはシンプルに前回の計算結果を保持し、現在の仮想的な数値を比較する計算方式ということがいれる。
